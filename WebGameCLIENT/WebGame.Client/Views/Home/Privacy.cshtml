@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Available Lobbies</title>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <style>
        /* Sayfa stilin aynen senin verdiğin gibi */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f8fafc;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 20px;
        }

        h1 {
            color: #1e293b;
            font-size: 32px;
            font-weight: 700;
        }

        .create-lobby-btn {
            background-color: #10b981;
            color: white;
            border: none;
            border-radius: 8px;
            padding: 12px 24px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s;
            text-decoration: none;
            display: inline-block;
        }

            .create-lobby-btn:hover {
                background-color: #059669;
            }

        .lobbies-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }

        .lobby-card {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            padding: 24px;
            transition: transform 0.2s, box-shadow 0.2s;
        }

            .lobby-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
            }

        .lobby-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 16px;
        }

        .lobby-name {
            font-size: 20px;
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 4px;
        }

        .privacy-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .privacy-public {
            background-color: #dcfce7;
            color: #166534;
        }

        .privacy-private {
            background-color: #fef3c7;
            color: #92400e;
        }

        .lobby-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .player-count {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #64748b;
            font-size: 14px;
        }

        .player-icon {
            width: 16px;
            height: 16px;
            background-color: #64748b;
            border-radius: 50%;
        }

        .lobby-status {
            font-size: 12px;
            color: #64748b;
            margin-bottom: 12px;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #64748b;
        }

            .empty-state h2 {
                font-size: 24px;
                margin-bottom: 12px;
                color: #374151;
            }

        @@media (max-width: 768px) {
            .header {
                flex-direction: column;
                align-items: stretch;
            }

            .create-lobby-btn {
                text-align: center;
            }

            .lobbies-grid {
                grid-template-columns: 1fr;
            }

            h1 {
                font-size: 28px;
                text-align: center;
            }
        }

        .modal-body {
            max-height: 70vh;
            overflow-y: auto;
        }

        .form-check-input:checked {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .form-label {
            font-weight: 500;
            color: #495057;
        }

        .form-control:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .btn-primary {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

            .btn-primary:hover {
                background-color: #0b5ed7;
                border-color: #0a58ca;
            }

        .privacy-options {
            display: flex;
            gap: 20px;
            margin-top: 8px;
        }

        .form-check {
            margin-bottom: 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Available Lobbies</h1>
            <button id="createLobbyBtn" class="create-lobby-btn">+ Create New Lobby</button>
        </div>
        <div class="lobbies-grid" id="lobbiesGrid">
            <!-- Lobbies will be injected here -->
        </div>
    </div>

    <div class="modal fade" id="createLobbyModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create Lobby</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="lobbyName" class="form-label">Lobby Name</label>
                            <input type="text" class="form-control" id="lobbyName" placeholder="Enter lobby name" />
                        </div>

                        <div class="mb-3">
                            <label for="maxPlayers" class="form-label">Max Players</label>
                            <input type="number" class="form-control" id="maxPlayers" min="1" max="10" placeholder="Enter maximum number of players" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Is Private</label>
                            <div class="privacy-options">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="isPrivate" id="privateYes" value="true" />
                                    <label class="form-check-label" for="privateYes">Yes</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="isPrivate" id="privateNo" value="false" checked />
                                    <label class="form-check-label" for="privateNo">No</label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="createLobbySubmitBtn" type="button" class="btn btn-primary">Create Lobby</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        const createLobbyModal = new bootstrap.Modal(document.getElementById("createLobbyModal"));
        const createLobbyBtn = document.getElementById("createLobbyBtn");
        const createLobbySubmitBtn = document.getElementById("createLobbySubmitBtn");

        createLobbyBtn.addEventListener("click", () => {
            createLobbyModal.show();
        });

        createLobbySubmitBtn.addEventListener("click", async () => {
            await createLobby();
        });

        async function createLobby() {
            const leaderId = localStorage.getItem("userId");
            const lobbyNameInput = document.getElementById("lobbyName").value;
            const lobbyName = lobbyNameInput !== "" ? lobbyNameInput : null;
            const maxPlayersInput = document.getElementById("maxPlayers").value;
            const maxPlayers = maxPlayersInput !== "" ? maxPlayersInput : null;
            const isPrivate = document.querySelector('input[name="isPrivate"]:checked').value === "true";

            const response = await fetch("https://localhost:7123/api/lobbies/create", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    leaderId: leaderId,
                    isPrivate: isPrivate,
                    maxPlayers: maxPlayers,
                    lobbyName: lobbyName,
                }),
            });
            const json = await response.json();
            console.log(json.message);
            await joinLobby(json.lobbyId);
        }

        addEventListener("DOMContentLoaded", async () => {
            await loadLobbies();
        });

        async function getAllLobbies() {
            const response = await fetch("https://localhost:7123/api/lobbies", {
                method: "get",
                headers: {
                    "Content-Type": "application/json",
                },
            });
            const json = await response.json();
            if (!response.ok) console.log(json);
            return json;
        }

        window.loadLobbies = async function () {
            const userId = localStorage.getItem("userId");
            const lobbies = await getAllLobbies();
            const grid = document.getElementById("lobbiesGrid");
            grid.innerHTML = "";

            if (lobbies.length === 0) {
                grid.innerHTML = `<div class="empty-state"><h2>No lobbies found</h2><p>Create one to get started!</p></div>`;
                return;
            }

            lobbies.forEach((lobby) => {
                const card = document.createElement("div");
                card.className = "lobby-card";

                const userInLobby = lobby.players?.some((p) => p.id === userId);
                const userIsLeader = lobby.leaderUserId === localStorage.getItem("userId");


                card.innerHTML = `
                    <div class="lobby-header">
                        <div>
                            <div class="lobby-name">${lobby.name}</div>
                            <div class="lobby-status">Host: ${lobby.hostName ?? "Unknown"}</div>
                        </div>
                        ${
                            lobby.isPrivate
                                ? '<span class="privacy-badge privacy-private">Private</span>'
                                : '<span class="privacy-badge privacy-public">Public</span>'
                        }
                    </div>
                    <div class="lobby-info">
                        <div class="player-count">
                            <span class="player-icon"></span>
                            <span>${lobby.playerCount ?? 0}/${lobby.maxPlayers ?? "Unknown"} Players</span>
                        </div>
                    </div>
                    <button class="join-leave-btn btn ${
                        userInLobby ? "btn-danger" : "btn-primary"
                    }">${userInLobby ? "Leave" : "Join"} Lobby</button>
                `;

                const actionButton = card.querySelector(".join-leave-btn");
                actionButton.addEventListener("click", async () => {
                    if(userIsLeader){
                        return;
                    }
                    if (userInLobby) {
                        await leaveLobby(lobby.id);
                    } else {
                        await joinLobby(lobby.id);
                    }
                    await loadLobbies(); 
                });

                grid.appendChild(card);
            });
        };

        async function joinLobby(lobbyId) {
            const response = await fetch(`https://localhost:7123/api/lobbies/${lobbyId}/join`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(localStorage.getItem("userId")),
            });
            const json = await response.json();
            if (!response.ok) {
                console.log(json.message);
                return;
            }
            console.log(json.message);
        }

    </script>

    <script src="~/lib/microsoft-signalr/signalr.min.js"></script>
    <script src="~/js/hub.js"></script>
</body>
</html>
